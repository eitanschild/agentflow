{"ast":null,"code":"var _jsxFileName = \"/Users/eitanschild/Downloads/agentflow-landing/src/AgentFlowDemo.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AgentFlowDemo() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [output, setOutput] = useState(null);\n  const [error, setError] = useState(null);\n  const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n  async function generateCopy() {\n    if (!input.trim()) return;\n    if (!apiKey) {\n      setError(\"Missing OpenAI API key. Check your .env file.\");\n      return;\n    }\n    setLoading(true);\n    setOutput(null);\n    setError(null);\n    try {\n      var _data$choices, _data$choices$, _data$choices$$messag;\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-3.5-turbo\",\n          messages: [{\n            role: \"system\",\n            content: \"You are a real estate AI assistant. When given a short property description, return:\\n\\n1. Listing Description\\n2. Instagram Caption\\n3. Email Subject Line\"\n          }, {\n            role: \"user\",\n            content: input\n          }]\n        })\n      });\n      const data = await response.json();\n      console.log(\"OpenAI response:\", data);\n      if (data.error) {\n        setError(\"OpenAI error: \" + data.error.message);\n      } else if (data !== null && data !== void 0 && (_data$choices = data.choices) !== null && _data$choices !== void 0 && (_data$choices$ = _data$choices[0]) !== null && _data$choices$ !== void 0 && (_data$choices$$messag = _data$choices$.message) !== null && _data$choices$$messag !== void 0 && _data$choices$$messag.content) {\n        setOutput(data.choices[0].message.content);\n      } else {\n        setError(\"OpenAI returned an unexpected response.\");\n      }\n    } catch (err) {\n      console.error(\"Fetch error:\", err);\n      setError(\"Failed to connect to OpenAI API.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"w-full max-w-2xl text-center py-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Try the AgentFlow Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 mb-6\",\n      children: \"Describe a property and let AI write the listing, caption, and subject line.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 4,\n      className: \"w-full p-4 rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 resize-none mb-4\",\n      placeholder: \"e.g. 3BR modern apartment in Tel Aviv with rooftop and sea views\",\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateCopy,\n      className: \"bg-blue-600 text-white px-6 py-3 rounded-full hover:bg-blue-700 transition mb-6\",\n      disabled: loading,\n      children: loading ? \"Generating...\" : \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 font-medium mb-4 whitespace-pre-wrap\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-left bg-white p-6 rounded-xl shadow-md space-y-4 text-gray-800 whitespace-pre-wrap\",\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(AgentFlowDemo, \"xrakurm7yXY2R47iS0IG/8xkacs=\");\n_c = AgentFlowDemo;\nvar _c;\n$RefreshReg$(_c, \"AgentFlowDemo\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AgentFlowDemo","_s","input","setInput","loading","setLoading","output","setOutput","error","setError","apiKey","process","env","REACT_APP_OPENAI_API_KEY","generateCopy","trim","_data$choices","_data$choices$","_data$choices$$messag","response","fetch","method","headers","Authorization","body","JSON","stringify","model","messages","role","content","data","json","console","log","message","choices","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/eitanschild/Downloads/agentflow-landing/src/AgentFlowDemo.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function AgentFlowDemo() {\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [output, setOutput] = useState(null);\n  const [error, setError] = useState(null);\n\n  const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n\n  async function generateCopy() {\n    if (!input.trim()) return;\n\n    if (!apiKey) {\n      setError(\"Missing OpenAI API key. Check your .env file.\");\n      return;\n    }\n\n    setLoading(true);\n    setOutput(null);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify({\n          model: \"gpt-3.5-turbo\",\n          messages: [\n            {\n              role: \"system\",\n              content: \"You are a real estate AI assistant. When given a short property description, return:\\n\\n1. Listing Description\\n2. Instagram Caption\\n3. Email Subject Line\",\n            },\n            {\n              role: \"user\",\n              content: input,\n            },\n          ],\n        }),\n      });\n\n      const data = await response.json();\n      console.log(\"OpenAI response:\", data);\n\n      if (data.error) {\n        setError(\"OpenAI error: \" + data.error.message);\n      } else if (data?.choices?.[0]?.message?.content) {\n        setOutput(data.choices[0].message.content);\n      } else {\n        setError(\"OpenAI returned an unexpected response.\");\n      }\n    } catch (err) {\n      console.error(\"Fetch error:\", err);\n      setError(\"Failed to connect to OpenAI API.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <section className=\"w-full max-w-2xl text-center py-12\">\n      <h2 className=\"text-3xl font-bold mb-4\">Try the AgentFlow Demo</h2>\n      <p className=\"text-gray-600 mb-6\">\n        Describe a property and let AI write the listing, caption, and subject line.\n      </p>\n\n      <textarea\n        rows={4}\n        className=\"w-full p-4 rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 resize-none mb-4\"\n        placeholder=\"e.g. 3BR modern apartment in Tel Aviv with rooftop and sea views\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n\n      <button\n        onClick={generateCopy}\n        className=\"bg-blue-600 text-white px-6 py-3 rounded-full hover:bg-blue-700 transition mb-6\"\n        disabled={loading}\n      >\n        {loading ? \"Generating...\" : \"Generate\"}\n      </button>\n\n      {error && (\n        <p className=\"text-red-500 font-medium mb-4 whitespace-pre-wrap\">{error}</p>\n      )}\n\n      {output && (\n        <div className=\"text-left bg-white p-6 rounded-xl shadow-md space-y-4 text-gray-800 whitespace-pre-wrap\">\n          {output}\n        </div>\n      )}\n    </section>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}